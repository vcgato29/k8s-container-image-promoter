substitutions:
  _REPO: k8s-container-image-promoter
  _GOLANGCI_LINT_VERSION: v1.13.2
  _GOPATH: /workspace/go

steps:
- name: "gcr.io/cloud-builders/git"
  id: setup
  entrypoint: "bash"
  args:
  - "-c"
  - |
    set -o errexit
    set -o nounset
    set -o pipefail
    set -o xtrace

    shopt -s dotglob
    # Remove the git archive that GCB auto-injects to /workspace, because it's
    # not a real Git repository (it's just a tarball). This is required because
    # we want to make use of git commands such as git-describe later on.
    rm -rf /workspace/*

    git \
      clone https://github.com/GoogleCloudPlatform/${_REPO} \
      --depth 1 \
      --branch $BRANCH_NAME \
      ${_GOPATH}/src/github.com/GoogleCloudPlatform/${_REPO}

    # Get golangci-lint; install into /workspace/bin/golangci-lint.
    pushd go
    curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh \
      | sh -s ${_GOLANGCI_LINT_VERSION}

# We have to use go:debian, not go[:latest], because the latter is based on
# alpine and does not have bash.
- name: "gcr.io/cloud-builders/go:debian"
  id: lint
  waitFor:
  - setup
  entrypoint: "bash"
  env:
  - "GOPATH=${_GOPATH}"
  dir: ${_GOPATH}/src/github.com/GoogleCloudPlatform/${_REPO}
  args:
  - "-c"
  - |
    set -o errexit
    set -o nounset
    set -o pipefail
    set -o xtrace

    # Lint with golangci-lint. Because megacheck/typecheck linters require the
    # `~/go/src/gopkg.in/yaml.v2` (external dependency) to be populated in the
    # current GOPATH, we have to bring those in.
    go get -u github.com/golang/dep/cmd/dep
    export PATH=${_GOPATH}/bin:$$PATH
    dep ensure
    ./lint.sh

- name: "gcr.io/cloud-builders/bazel"
  id: test
  waitFor:
  - setup
  entrypoint: "bash"
  dir: ${_GOPATH}/src/github.com/GoogleCloudPlatform/${_REPO}
  args:
  - "-c"
  - |
    set -o errexit
    set -o nounset
    set -o pipefail
    set -o xtrace

    bazel test --test_output=all //lib/...

- name: "gcr.io/cloud-builders/bazel"
  id: build-image
  dir: ${_GOPATH}/src/github.com/GoogleCloudPlatform/${_REPO}
  args:
  - "build"
  - "--workspace_status_command=$${PWD}/workspace_status.sh"
  - "//:cip-docker-loadable.tar"

- name: "gcr.io/cloud-builders/bazel"
  id: push-image
  entrypoint: "bash"
  dir: ${_GOPATH}/src/github.com/GoogleCloudPlatform/${_REPO}
  args:
  - "-c"
  - |
    set -o errexit
    set -o nounset
    set -o pipefail
    set -o xtrace

    bazel run --workspace_status_command=$${PWD}/workspace_status.sh :push-cip-latest
    bazel run --workspace_status_command=$${PWD}/workspace_status.sh :push-cip-tagged
